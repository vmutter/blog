{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"2023/11/21/iniciando-app-serveless-aws-sam/","title":"Iniciando uma aplica\u00e7\u00e3o serveless utilizando o AWS SAM","text":"","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#pre-requisitos","title":"Pr\u00e9 Requisitos","text":"<p>\u00c9 fundamental garantir que tudo esteja configurado corretamente. Certifique-se de que todas as dependencias estejam instaladas e configuradas. </p> <ul> <li>Docker</li> <li>SAM CLI</li> <li>AWS CLI</li> <li>Git</li> <li>Uma das linguagens abaixo que se sentir mais familiarizado para criar a aplica\u00e7\u00e3o</li> <li>Node.js</li> <li>Python</li> <li>Java (iremos utilizar Java 11 com Maven para os exemplos)</li> </ul>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#criando-uma-aplicacao-sem-servidor-com-aws-sam","title":"Criando uma aplica\u00e7\u00e3o sem servidor com AWS  SAM","text":"<pre><code>sam init\n</code></pre> <p>Nas op\u00e7\u00f5es selecionar:</p> <pre><code>Which template source would you like to use?\n        1 - AWS Quick Start Templates\n        ...\nChoice: 1\n\nChoose an AWS Quick Start application template\n        1 - Hello World Example\n        ...\nTemplate: 1\n\nUse the most popular runtime and package type? (Python and zip) [y/N]: n\n</code></pre> <p>Ap\u00f3s selecionado, iremos selecionar o runtime e a vers\u00e3o, so caso, Java 11.</p> <pre><code>        ...\n        10 - java11\n        ...\n</code></pre> <p>E em seguida, a forma de empacotamento e gerenciador de dependencias, selecionar <code>Zip</code> e <code>maven</code> , para as demais perguntas, responder <code>n</code> e para o nome da aplica\u00e7\u00e3o manter o padr\u00e3o <code>sam-app</code>.</p> <pre><code>What package type would you like to use?\n        1 - Zip\n        2 - Image\nPackage type: 1\n\nWhich dependency manager would you like to use?\n        1 - gradle\n        2 - maven\nDependency manager: 2\n\nWould you like to enable X-Ray tracing on the function(s) in your application?  [y/N]: n\n\nWould you like to enable monitoring using CloudWatch Application Insights?\nFor more info, please view https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-application-insights.html [y/N]: n\n\nProject name [sam-app]:\n</code></pre> <p>Com isso teremos o projeto <code>sam-app</code> inicializado.</p>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#rodando-localmente","title":"Rodando localmente","text":"","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#instalando-as-dependencias-do-projeto","title":"Instalando as dependencias do projeto","text":"<p>Para instalar as dependencias, acessar a pasta do projeto e rodar:</p> <pre><code>mvn install\n</code></pre> <p>Para fazer um build da aplica\u00e7\u00e3o e gerar os artefatos para deploy, executar:</p> <pre><code>sam build\n</code></pre>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#rodando-uma-funcao-lambda-localmente","title":"Rodando uma fun\u00e7\u00e3o Lambda localmente","text":"<p>Para rodar uma fun\u00e7\u00e3o Lambda individualmente:</p> <pre><code>sam local invoce --events events/event.json\n</code></pre> <p>Tamb\u00e9m \u00e9 poss\u00edvel rodar criando um servidor HTTP local com:</p> <pre><code>sam local start-api --port 8080\n</code></pre>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#rodando-os-testes-unitarios","title":"Rodando os testes unit\u00e1rios","text":"<p>De dentro da pasta da fun\u00e7\u00e3o Lambda:</p> <pre><code>mvn test\n</code></pre>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#fazendo-o-deploy-manual","title":"Fazendo o deploy manual","text":"<p>Para fazer o deploy manualmente pela primeira vez, com a ajuda do CLI:</p> <pre><code>sam deploy --guided\n</code></pre> <p>No console:</p> <pre><code>Configuring SAM deploy\n======================\n\nLooking for config file [samconfig.toml] :  Not found\n\nSetting default arguments for 'sam deploy'\n=========================================\nStack Name [sam-app]:\nAWS Region [us-west-2]:\n#Shows you resources changes to be deployed and require a 'Y' to initiate deploy\nConfirm changes before deploy [y/N]:\n#SAM needs permission to be able to create roles to connect to the resources in your template\nAllow SAM CLI IAM role creation [Y/n]:\n#Preserves the state of previously provisioned resources when an operation fails\nDisable rollback [y/N]:\nHelloWorldFunction may not have authorization defined, Is this okay? [y/N]: y\nSave arguments to configuration file [Y/n]:\nSAM configuration file [samconfig.toml]:\nSAM configuration environment [default]:\n</code></pre>","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#cicd-com-github","title":"CI/CD com GitHub","text":"","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#sam-accelarate","title":"SAM Accelarate","text":"","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/11/21/iniciando-app-serveless-aws-sam/#gerenciando-permissoes","title":"Gerenciando permiss\u00f5es","text":"","tags":["AWS","AWS SAM","Serveless"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/","title":"Configurar AWS CloudWatch para lan\u00e7ar alerta quando AWS SQS receber mensagem na DLQ","text":"","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#aws-cloudwatch-metrics","title":"AWS CloudWatch Metrics","text":"<p>Acessar <code>Metrics</code> e em <code>All metrics</code> selecionar <code>ApproximateNumberOfMessagesVisible</code> e <code>ApproximateNumberOfMessagesNotVisible</code> da fila DLQ da fila que se deseja monitorar.</p> <ul> <li> <p>Na aba <code>Graphed metrics</code>, selecionar as m\u00e9tricas de <code>ApproximateNumberOfMessagesVisible</code> e <code>ApproximateNumberOfMessagesNotVisible</code> e clciar em <code>Add math</code> &gt; <code>All functions</code> &gt;  <code>RATE</code>.</p> </li> <li> <p>Na coluna <code>Details</code>, editar a f\u00f3rmula para <code>RATE(m1+m2)</code></p> </li> <li> <p>Na coluna <code>Actions</code>, clicar no \u00edcone <code>Create alarm</code></p> </li> </ul>","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#aws-cloudwatch-alarms","title":"AWS CloudWatch Alarms","text":"","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#step-1-specify-metric-and-conditions","title":"Step 1: Specify metric and conditions","text":"<ul> <li> <p>Em <code>Metrics</code>, alterar valores conforme necessidade, opcional.</p> </li> <li> <p>Em <code>Conditions</code>, deixar <code>Greater</code> e no valor do threshold, colocar 0 (zero), com isso qualquer mensagem que cair da DLQ, ir\u00e1 disparar um alerta. </p> </li> </ul>","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#step-2-configure-actions","title":"Step 2: Configure actions","text":"<ul> <li>Selecionar as op\u00e7\u00f5es confome necessidade, no caso, enviando para um t\u00f3pico do SNS para fazer a notifica\u00e7\u00e3o.</li> </ul> <pre><code>Alarm state trigger: In alarm\nSend notification to the following SNS topic: Select an existing SNS topic ou Create new topic\nSend a notification to...: Selecionar o t\u00f3pico desejado\n</code></pre> <ul> <li>Pode-se alterar as demais op\u00e7\u00f5es conforme necess\u00e1rio, sen\u00e3o clicar em <code>Next</code>.</li> </ul>","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#step-3-add-name-and-description","title":"Step 3: Add name and description","text":"<ul> <li> <p>Adicionar um nome para o alarme criado.</p> </li> <li> <p>Caso deseje, pode-se adicionar uma descri\u00e7\u00e3o em formato Markdown.</p> </li> <li> <p>Ao finalizar, clicar em <code>Next</code>.</p> </li> </ul>","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/05/configurar-cloudwatch-lancar-alerta-sqs-dlq/#step-4-preview-and-create","title":"Step 4: Preview and create","text":"<ul> <li>Revise e valide as informa\u00e7\u00f5es referentes ao alarme criado, e se estiver tudo certo, clique em <code>Create alarm</code>.</li> </ul>","tags":["AWS","AWS CloudWatch","AWS SQS"]},{"location":"2023/12/26/lendo-arquivos-pdf-com-apache-pdfbox-3/","title":"Lendo arquvios PDF com Java usando o Apache PDFBox 3","text":"<p>A manipula\u00e7\u00e3o de arquivos PDF \u00e9 uma tarefa comum em muitos projetos de software. Se voc\u00ea est\u00e1 trabalhando com Java, uma das melhores bibliotecas dispon\u00edveis para esta finalidade \u00e9 o Apache PDFBox 3.</p>","tags":["Java","PDF","Apache","Apache PDFBox 3"]},{"location":"2023/12/26/lendo-arquivos-pdf-com-apache-pdfbox-3/#introducao-ao-apache-pdfbox-3","title":"Introdu\u00e7\u00e3o ao Apache PDFBox 3","text":"<p>O Apache PDFBox \u00e9 uma biblioteca open-source que permite a cria\u00e7\u00e3o, manipula\u00e7\u00e3o e obten\u00e7\u00e3o de conte\u00fado de arquivos PDF. A vers\u00e3o 3 do Apache PDFBox trouxe melhorias significativas em termos de performance e facilidade de uso.</p> <p>Primeiro precisamos adicionar a biblioteca do Apache PDFBox no projeto, no <code>pom.xml</code> adicionar:</p> pom.xml<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.pdfbox&lt;/groupId&gt;\n    &lt;artifactId&gt;pdfbox&lt;/artifactId&gt;\n    &lt;version&gt;3.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>","tags":["Java","PDF","Apache","Apache PDFBox 3"]},{"location":"2023/12/26/lendo-arquivos-pdf-com-apache-pdfbox-3/#extracao-de-texto-de-um-documento-inteiro","title":"Extra\u00e7\u00e3o de Texto de um Documento Inteiro","text":"<p>Vamos come\u00e7ar com um exemplo simples de como extrair texto de um documento PDF inteiro.</p> ExtractTextFromPDF.java<pre><code>import org.apache.pdfbox.pdmodel.PDDocument;\nimport org.apache.pdfbox.text.PDFTextStripper;\n\npublic class ExtractTextFromPDF {\n    public static void main(String[] args) {\n        // Carregando o arquivo \"seu_documento.pdf\" da pasta resources\n        ClassLoader classLoader = getClass().getClassLoader();\n        File file = new File(classLoader.getResource(\"seu_documento.pdf\").getFile());\n\n        try (PDDocument document = PDDocument.load(file)) {\n            PDFTextStripper stripper = new PDFTextStripper();\n            String text = stripper.getText(document);\n            System.out.println(\"Texto extra\u00eddo: \\n\" + text);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>Neste exemplo, carregamos o documento PDF usando PDDocument.load e utilizamos a classe PDFTextStripper para extrair o texto. O m\u00e9todo getText retorna o texto extra\u00eddo, que \u00e9 ent\u00e3o impresso no console.</p>","tags":["Java","PDF","Apache","Apache PDFBox 3"]},{"location":"2023/12/26/lendo-arquivos-pdf-com-apache-pdfbox-3/#extracao-de-texto-por-area","title":"Extra\u00e7\u00e3o de Texto por \u00c1rea","text":"<p>A extra\u00e7\u00e3o de texto por \u00e1rea \u00e9 \u00fatil quando voc\u00ea est\u00e1 interessado apenas em uma parte espec\u00edfica do documento.</p> ExtractTextByArea.java<pre><code>import org.apache.pdfbox.pdmodel.PDDocument;\nimport org.apache.pdfbox.text.PDFTextStripperByArea;\n\nimport java.awt.Rectangle;\nimport java.awt.geom.Rectangle2D;\n\npublic class ExtractTextByArea {\n    public static void main(String[] args) {\n        // Carregando o arquivo \"seu_documento.pdf\" da pasta resources\n        ClassLoader classLoader = getClass().getClassLoader();\n        File file = new File(classLoader.getResource(\"seu_documento.pdf\").getFile());\n\n        try (PDDocument document = PDDocument.load(file)) {\n            PDFTextStripperByArea stripper = new PDFTextStripperByArea();\n            stripper.setSortByPosition(true);\n\n            Rectangle2D region = new Rectangle(10, 50, 200, 100); // Define a \u00e1rea (x, y, largura, altura)\n            stripper.addRegion(\"region1\", region);\n\n            stripper.extractRegions(document.getPage(0)); // Extrai texto da primeira p\u00e1gina\n            String textForRegion = stripper.getTextForRegion(\"region1\");\n            System.out.println(\"Texto extra\u00eddo da \u00e1rea especificada: \\n\" + textForRegion);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>Neste exemplo, definimos uma regi\u00e3o espec\u00edfica usando um objeto Rectangle2D e adicionamos essa regi\u00e3o ao PDFTextStripperByArea. Depois, extra\u00edmos o texto dessa \u00e1rea espec\u00edfica e o imprimimos no console.</p>","tags":["Java","PDF","Apache","Apache PDFBox 3"]},{"location":"2023/12/26/lendo-arquivos-pdf-com-apache-pdfbox-3/#conclusao","title":"Conclus\u00e3o","text":"<p>O Apache PDFBox 3 oferece um meio eficaz e flex\u00edvel de trabalhar com arquivos PDF em Java. Seja para extrair texto de um documento inteiro ou de \u00e1reas espec\u00edficas, essa biblioteca se mostra bastante \u00fatil em diversas situa\u00e7\u00f5es. Com a facilidade de uso e a robustez do PDFBox, voc\u00ea pode integrar facilmente a manipula\u00e7\u00e3o de PDFs em seus projetos Java.</p>","tags":["Java","PDF","Apache","Apache PDFBox 3"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/","title":"Tracing com Spring Boot 2.2, Spring Cloud Sleuth e AWS SQS","text":"","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#configurando-uma-fila-sqs-local-com-localstack","title":"Configurando uma fila SQS local com Localstack","text":"<p>Criar um arquivo <code>docker-compose.yml</code> com o seguinte conte\u00fado:</p> docker-compose.yml<pre><code>version: '3.7'\nservices:\n  aws:\n    container_name: localstack\n    image: localstack/localstack:latest\n    environment:\n      - SERVICES=sqs\n      - DEFAULT_REGION=us-east-1\n      - DEBUG=0\n      - DATA_DIR=/tmp/localstack/data\n\n    ports:\n      - '4566:4566'\n    volumes:\n      - ./localstack_bootstrap:/etc/localstack/init/ready.d/\n    networks:\n      - localstack\n\nnetworks:\n  localstack:\n    driver: bridge\n</code></pre> <p>Nas configura\u00e7\u00f5es de <code>volume</code>, mapeado a pasta <code>./localstack_bootstrap</code> para a <code>/etc/localstack/init/ready.d/</code>, com isso, todos os scripts que estiverem nessa pasta, ser\u00e3o executados ap\u00f3s a inicializa\u00e7\u00e3o do Localstack.</p> <p>Agora, vamos criar a pasta, <code>localstack_bootstrap</code> e adicionar o script <code>sqs_bootstrap.sh</code> abaixo:</p> sqs_bootstrap.sh<pre><code>#!/usr/bin/env bash\n\nset -euo pipefail\n\n# enable debug\n# set -x\n\necho \"configuring sqs\"\necho \"===================\"\nLOCALSTACK_HOST=localhost\nAWS_REGION=us-east-1\n\ncreate_queue() {\n    local QUEUE_NAME_TO_CREATE=$1\n    aws --endpoint-url=http://${LOCALSTACK_HOST}:4566 sqs create-queue --queue-name ${QUEUE_NAME_TO_CREATE} --region ${AWS_REGION} --attributes VisibilityTimeout=30,FifoQueue=true\n}\n\ncreate_queue \"sample-queue.fifo\"\n</code></pre> <p>Com isso ser\u00e1 criado uma fila FIFO no SQS com o nome <code>sample-queue.fifo</code>.</p> <p>Para iniciar o LocalStack execute: - <code>docker compose up</code> para iniciar no modo interativo e anexar o docker ao console, para visualizar os logs ou; - <code>docker compose up -d</code> o para iniciar no modo background, sem anexar ao console. </p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#producer","title":"Producer","text":"","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#pomxml","title":"pom.xml","text":"<p>Configurando as depend\u00eancias do Spring Boot 2.2 e Spring Cloud. Aten\u00e7\u00e3o para as vers\u00f5es compat\u00edveis de ambos, para mais informa\u00e7\u00f5es: Documenta\u00e7\u00e3o Spring Cloud</p> pom.xml parcial<pre><code>    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.2.13.RELEASE&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;Hoxton.SR12&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-messaging&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.zipkin.aws&lt;/groupId&gt;\n            &lt;artifactId&gt;brave-instrumentation-aws-java-sdk-sqs&lt;/artifactId&gt;\n            &lt;version&gt;0.21.2&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#applicationyml","title":"application.yml","text":"application.yml<pre><code>spring:\n  application:\n    name: producer-app\n\ncloud:\n  aws:\n    stack: false\n    stack.auto: false\n    region:\n      static: us-east-1\n      auto: false\n    credentials:\n      access-key: ANUJDEKAVADIYAEXAMPLE\n      secret-key: 2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY\n    queue:\n      uri: http://localhost:4566\n      name: sample-queue.fifo\n</code></pre> <p><code>spring.application.name</code> para adicionar o nome da  aplica\u00e7\u00e3o, al\u00e9m do trace e span id.</p> <p><code>cloud.aws.*</code> s\u00e3o as configura\u00e7\u00f5es para se conectar a fila FIFO do SQS criado no Localstack.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#configurando-o-cliente-da-fila-sqs","title":"Configurando o cliente da fila SQS","text":"SQSConfig.java<pre><code>@Configuration\npublic class SQSConfig {\n\n    @Value(\"${cloud.aws.region.static}\")\n    private String region;\n\n    @Value(\"${cloud.aws.credentials.access-key}\")\n    private String accessKeyId;\n\n    @Value(\"${cloud.aws.credentials.secret-key}\")\n    private String secretAccessKey;\n\n    @Value(\"${cloud.aws.queue.uri}\")\n    private String sqsUrl;\n\n    @Bean\n    @Primary\n    public AmazonSQSAsync amazonSQSAsync() {\n        Tracing current = Tracing.current();\n        SqsMessageTracing sqsMessageTracing = SqsMessageTracing.create(current);\n\n        return AmazonSQSAsyncClientBuilder.standard()\n                .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(sqsUrl, region))\n                .withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey)))\n                .withRequestHandlers(sqsMessageTracing.requestHandler())\n                .build();\n    }\n\n    @Bean\n    public QueueMessagingTemplate queueMessagingTemplate() {\n        return new QueueMessagingTemplate(amazonSQSAsync());\n    }\n\n}\n</code></pre> <p>Aten\u00e7\u00e3o para adicionar o <code>SqsMessageTracing</code> no handler do <code>AmazonSQSAsync</code>.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#enviando-uma-mensagem-com-o-aws-sdk","title":"Enviando uma mensagem com o AWS SDK","text":"Producer.java<pre><code>@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class Producer {\n\n    @Value(\"${cloud.aws.queue.uri}\")\n    private String sqsUrl;\n\n    @Value(\"${cloud.aws.queue.name}\")\n    private String sqsName;\n\n    private final AmazonSQSAsync async;\n    private final ObjectMapper objectMapper;\n\n    public void sendMessage() throws JsonProcessingException {\n        String message = objectMapper.writeValueAsString(Collections.singletonMap(\"key\", \"value\"));\n\n        SendMessageRequest batchRequest = new SendMessageRequest()\n                .withQueueUrl(sqsUrl + \"/000000000000/\" + sqsName)\n                .withMessageBody(message)\n                .withMessageGroupId(UUID.randomUUID().toString())\n                .withMessageDeduplicationId(UUID.randomUUID().toString());\n\n        log.info(\"sending message [{}]\", message);\n        async.sendMessage(batchRequest);\n    }\n}\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#enviando-uma-mensagem-com-o-spring-cloud-aws-messaging","title":"Enviando uma mensagem com o Spring Cloud AWS Messaging","text":"Producer.java<pre><code>@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class Producer {\n\n    @Value(\"${cloud.aws.queue.name}\")\n    private String sqsName;\n\n    private final AmazonSQSAsync async;\n\n    private final QueueMessagingTemplate messagingTemplate;\n\n    public void sendMessage() {\n        Map&lt;String, String&gt; payload = Collections.singletonMap(\"key\", \"value\");\n\n        Map&lt;String, Object&gt; headers = new HashMap&lt;&gt;();\n        headers.put(\"message-group-id\", UUID.randomUUID().toString());\n        headers.put(\"message-deduplication-id\", UUID.randomUUID().toString());\n\n        log.info(\"sending message [{}]\", payload);\n        messagingTemplate.convertAndSend(sqsName, payload, headers);\n    }\n}\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#consumer","title":"Consumer","text":"","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#pomxml_1","title":"pom.xml","text":"pom.xml parcial<pre><code>    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.2.13.RELEASE&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;Hoxton.SR12&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-autoconfigure&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-messaging&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#applicationyml_1","title":"application.yml","text":"application.yml<pre><code>spring:\n  application:\n    name: consumer-app\n\nserver:\n  port: 8081\n\ncloud:\n  aws:\n    stack: false\n    stack.auto: false\n    region:\n      static: us-east-1\n      auto: false\n    credentials:\n      access-key: ANUJDEKAVADIYAEXAMPLE\n      secret-key: 2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY\n    queue:\n      uri: http://localhost:4566\n      name: sample-queue.fifo\n</code></pre> <p><code>spring.application.name</code> para adicionar o nome da  aplica\u00e7\u00e3o, al\u00e9m do trace e span id.</p> <p><code>cloud.aws.*</code> s\u00e3o as configura\u00e7\u00f5es para se conectar a fila FIFO do SQS criado no Localstack.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-2-spring-cloud-sleuth-e-aws-sqs/#configurando-o-cliente-da-fila-sqs_1","title":"Configurando o cliente da fila SQS","text":"<p>``` java SQSConfig.java @Configuration public class SQSConfig {</p> <pre><code>@Value(\"${cloud.aws.region.static}\")\nprivate String region;\n\n@Value(\"${cloud.aws.credentials.access-key}\")\nprivate String accessKeyId;\n\n@Value(\"${cloud.aws.credentials.secret-key}\")\nprivate String secretAccessKey;\n\n@Value(\"${cloud.aws.queue.uri}\")\nprivate String sqsUrl;\n\n@Bean\n@Primary\npublic AmazonSQSAsync amazonSQSAsync() {\n    return AmazonSQSAsyncClientBuilder.standard()\n            .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(sqsUrl, region))\n            .withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey)))\n            .build();\n}\n</code></pre> <p>} <pre><code>### Consumindo uma mensagem com o Spring Cloud AWS Messaging\n\n```java title=\"Consumer.java\"\n@Slf4j\n@Service\npublic class Consumer {\n\n    @SqsListener(value = \"${cloud.aws.queue.name}\",\n            deletionPolicy = SqsMessageDeletionPolicy.ON_SUCCESS)\n    public void receive(final Message message) {\n        log.info(message.getPayload().toString());\n    }\n\n}\n</code></pre></p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/","title":"Tracing com Spring Boot 2.7, Spring Cloud Sleuth e AWS SQS","text":"<p>Alguns pontos de aten\u00e7\u00e3 com rela\u00e7\u00e3o ao s\u00e3o as vers\u00f5es do Spring Boot e Spring Cloud, al\u00e9m de usar a biblioteca <code>io.awspring.cloud</code> e n\u00e3o mais a <code>org.springframework.cloud</code> para a o Spring Cloud AWS.</p> <p>Atl\u00e9m disso, tem que fazer uma configura\u00e7\u00e3o a mais no consumidor, para fazer funcionar com o <code>@SqsListener</code>.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#configurando-uma-fila-sqs-local-com-localstack","title":"Configurando uma fila SQS local com Localstack","text":"<p>Criar um arquivo <code>docker-compose.yml</code> com o seguinte conte\u00fado:</p> docker-compose.yml<pre><code>version: '3.7'\nservices:\n  aws:\n    container_name: localstack\n    image: localstack/localstack:latest\n    environment:\n      - SERVICES=sqs\n      - DEFAULT_REGION=us-east-1\n      - DEBUG=0\n      - DATA_DIR=/tmp/localstack/data\n\n    ports:\n      - '4566:4566'\n    volumes:\n      - ./localstack_bootstrap:/etc/localstack/init/ready.d/\n    networks:\n      - localstack\n\nnetworks:\n  localstack:\n    driver: bridge\n</code></pre> <p>Nas configura\u00e7\u00f5es de <code>volume</code>, mapeado a pasta <code>./localstack_bootstrap</code> para a <code>/etc/localstack/init/ready.d/</code>, com isso, todos os scripts que estiverem nessa pasta, ser\u00e3o executados ap\u00f3s a inicializa\u00e7\u00e3o do Localstack.</p> <p>Agora, vamos criar a pasta, <code>localstack_bootstrap</code> e adicionar o script <code>sqs_bootstrap.sh</code> abaixo:</p> sqs_bootstrap.sh<pre><code>#!/usr/bin/env bash\n\nset -euo pipefail\n\n# enable debug\n# set -x\n\necho \"configuring sqs\"\necho \"===================\"\nLOCALSTACK_HOST=localhost\nAWS_REGION=us-east-1\n\ncreate_queue() {\n    local QUEUE_NAME_TO_CREATE=$1\n    aws --endpoint-url=http://${LOCALSTACK_HOST}:4566 sqs create-queue --queue-name ${QUEUE_NAME_TO_CREATE} --region ${AWS_REGION} --attributes VisibilityTimeout=30,FifoQueue=true\n}\n\ncreate_queue \"sample-queue.fifo\"\n</code></pre> <p>Com isso ser\u00e1 criado uma fila FIFO no SQS com o nome <code>sample-queue.fifo</code>.</p> <p>Para iniciar o LocalStack execute: - <code>docker compose up</code> para iniciar no modo interativo e anexar o docker ao console, para visualizar os logs ou; - <code>docker compose up -d</code> o para iniciar no modo background, sem anexar ao console. </p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#producer","title":"Producer","text":"","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#pomxml","title":"pom.xml","text":"<p>Configurando as depend\u00eancias do Spring Boot 2.7 e Spring Cloud. Aten\u00e7\u00e3o para as vers\u00f5es compat\u00edveis de ambos, para mais informa\u00e7\u00f5es: Documenta\u00e7\u00e3o Spring Cloud</p> pom.xml parcial<pre><code>[    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.2.13.RELEASE&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;Hoxton.SR12&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;properties&gt;\n        &lt;spring.cloud.aws.version&gt;2.4.4&lt;/spring.cloud.aws.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.awspring.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-messaging&lt;/artifactId&gt;\n            &lt;version&gt;${spring.cloud.aws.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.zipkin.aws&lt;/groupId&gt;\n            &lt;artifactId&gt;brave-instrumentation-aws-java-sdk-sqs&lt;/artifactId&gt;\n            &lt;version&gt;0.21.2&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#applicationyml","title":"application.yml","text":"application.yml<pre><code>spring:\n  application:\n    name: producer-app\n\ncloud:\n  aws:\n    stack: false\n    stack.auto: false\n    region:\n      static: us-east-1\n      auto: false\n    credentials:\n      access-key: ANUJDEKAVADIYAEXAMPLE\n      secret-key: 2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY\n    queue:\n      uri: http://localhost:4566\n      name: sample-queue.fifo\n</code></pre> <p><code>spring.application.name</code> para adicionar o nome da  aplica\u00e7\u00e3o, al\u00e9m do trace e span id.</p> <p><code>cloud.aws.*</code> s\u00e3o as configura\u00e7\u00f5es para se conectar a fila FIFO do SQS criado no Localstack.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#configurando-o-cliente-da-fila-sqs","title":"Configurando o cliente da fila SQS","text":"SQSConfig.java<pre><code>@Configuration\npublic class SQSConfig {\n\n    @Value(\"${cloud.aws.region.static}\")\n    private String region;\n\n    @Value(\"${cloud.aws.credentials.access-key}\")\n    private String accessKeyId;\n\n    @Value(\"${cloud.aws.credentials.secret-key}\")\n    private String secretAccessKey;\n\n    @Value(\"${cloud.aws.queue.uri}\")\n    private String sqsUrl;\n\n    @Bean\n    @Primary\n    public AmazonSQSAsync amazonSQSAsync() {\n        Tracing current = Tracing.current();\n        SqsMessageTracing sqsMessageTracing = SqsMessageTracing.create(current);\n\n        return AmazonSQSAsyncClientBuilder.standard()\n                .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(sqsUrl, region))\n                .withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey)))\n                .withRequestHandlers(sqsMessageTracing.requestHandler())\n                .build();\n    }\n\n    @Bean\n    public QueueMessagingTemplate queueMessagingTemplate() {\n        return new QueueMessagingTemplate(amazonSQSAsync());\n    }\n\n}\n</code></pre> <p>Aten\u00e7\u00e3o para adicionar o <code>SqsMessageTracing</code> no handler do <code>AmazonSQSAsync</code>.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#enviando-uma-mensagem-com-o-aws-sdk","title":"Enviando uma mensagem com o AWS SDK","text":"Producer.java<pre><code>@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class Producer {\n\n    @Value(\"${cloud.aws.queue.uri}\")\n    private String sqsUrl;\n\n    @Value(\"${cloud.aws.queue.name}\")\n    private String sqsName;\n\n    private final AmazonSQSAsync async;\n    private final ObjectMapper objectMapper;\n\n    public void sendMessage() throws JsonProcessingException {\n        String message = objectMapper.writeValueAsString(Collections.singletonMap(\"key\", \"value\"));\n\n        SendMessageRequest batchRequest = new SendMessageRequest()\n                .withQueueUrl(sqsUrl + \"/000000000000/\" + sqsName)\n                .withMessageBody(message)\n                .withMessageGroupId(UUID.randomUUID().toString())\n                .withMessageDeduplicationId(UUID.randomUUID().toString());\n\n        log.info(\"sending message [{}]\", message);\n        async.sendMessage(batchRequest);\n    }\n}\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#enviando-uma-mensagem-com-o-spring-cloud-aws-messaging","title":"Enviando uma mensagem com o Spring Cloud AWS Messaging","text":"Producer.java<pre><code>@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class Producer {\n\n    @Value(\"${cloud.aws.queue.name}\")\n    private String sqsName;\n\n    private final AmazonSQSAsync async;\n\n    private final QueueMessagingTemplate messagingTemplate;\n\n    public void sendMessage() {\n        Map&lt;String, String&gt; payload = Collections.singletonMap(\"key\", \"value\");\n\n        Map&lt;String, Object&gt; headers = new HashMap&lt;&gt;();\n        headers.put(\"message-group-id\", UUID.randomUUID().toString());\n        headers.put(\"message-deduplication-id\", UUID.randomUUID().toString());\n\n        log.info(\"sending message [{}]\", payload);\n        messagingTemplate.convertAndSend(sqsName, payload, headers);\n    }\n}\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#consumer","title":"Consumer","text":"","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#pomxml_1","title":"pom.xml","text":"pom.xml parcial<pre><code>    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.14&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;2021.0.8&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;io.awspring.cloud&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-cloud-aws-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;2.4.4&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.awspring.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-autoconfigure&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.awspring.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-aws-messaging&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#applicationyml_1","title":"application.yml","text":"application.yml<pre><code>spring:\n  application:\n    name: consumer-app\n\nserver:\n  port: 8081\n\ncloud:\n  aws:\n    stack: false\n    stack.auto: false\n    region:\n      static: us-east-1\n      auto: false\n    credentials:\n      access-key: ANUJDEKAVADIYAEXAMPLE\n      secret-key: 2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY\n    queue:\n      uri: http://localhost:4566\n      name: sample-queue.fifo\n</code></pre> <p><code>spring.application.name</code> para adicionar o nome da  aplica\u00e7\u00e3o, al\u00e9m do trace e span id.</p> <p><code>cloud.aws.*</code> s\u00e3o as configura\u00e7\u00f5es para se conectar a fila FIFO do SQS criado no Localstack.</p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#configurando-o-cliente-da-fila-sqs_1","title":"Configurando o cliente da fila SQS","text":"<p>``` java SQSConfig.java @Configuration public class SQSConfig {</p> <pre><code>@Value(\"${cloud.aws.region.static}\")\nprivate String region;\n\n@Value(\"${cloud.aws.credentials.access-key}\")\nprivate String accessKeyId;\n\n@Value(\"${cloud.aws.credentials.secret-key}\")\nprivate String secretAccessKey;\n\n@Value(\"${cloud.aws.queue.uri}\")\nprivate String sqsUrl;\n\n@Bean\n@Primary\npublic AmazonSQSAsync amazonSQSAsync() {\n    return AmazonSQSAsyncClientBuilder.standard()\n            .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(sqsUrl, region))\n            .withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey)))\n            .build();\n}\n</code></pre> <p>} <pre><code>Al\u00e9m da configura\u00e7\u00e3o do cliente da fila SQS do AWS SDK, para que funcione de forma transparente, deve-se criar um `@Aspect`.\n\n``` java title=\"TraceSpringCloudMessaging.java\"\n@Slf4j\n@Aspect\n@Component\n@RequiredArgsConstructor\npublic class TraceSpringCloudMessaging {\n\n    private final Tracer tracer;\n\n    private final Tracing tracing;\n\n    private final Propagator.Getter&lt;MessageHeaders&gt; extractor = (carrier, key) -&gt; {\n        Object value = carrier.get(key);\n        return value == null ? null : value.toString();\n    };\n\n    @Around(\"@annotation(io.awspring.cloud.messaging.listener.annotation.SqsListener)\")\n    public Object addTracing(ProceedingJoinPoint proceedingJoinPoint) {\n        Optional&lt;MessageHeaders&gt; message = Arrays.stream(proceedingJoinPoint.getArgs())\n                .filter(Message.class::isInstance)\n                .map(m -&gt; ((Message&lt;?&gt;) m).getHeaders()).findFirst();\n\n        Span span = returnSpan(message);\n        try (Tracer.SpanInScope scope = tracer.withSpanInScope(span)) {\n            return proceedingJoinPoint.proceed();\n        } catch (Throwable e) {\n            log.error(\"Caught exception during proceeding joint point {}\", e.getMessage());\n            throw new RuntimeException(e);\n        } finally {\n            span.finish();\n        }\n    }\n\n    private Span returnSpan(Optional&lt;MessageHeaders&gt; headers) {\n        if (headers.isPresent()) {\n            MessageHeaders messageHeaders = headers.get();\n            TraceContextOrSamplingFlags extracted = tracing.propagation().extractor(extractor::get)\n                    .extract(messageHeaders);\n            return tracer.nextSpan(extracted);\n        }\n        return tracer.nextSpan();\n    }\n}\n</code></pre></p>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"2024/01/03/tracing-com-spring-boot-2-7-spring-cloud-sleuth-e-aws-sqs/#consumindo-uma-mensagem-com-o-spring-cloud-aws-messaging","title":"Consumindo uma mensagem com o Spring Cloud AWS Messaging","text":"Consumer.java<pre><code>@Slf4j\n@Service\npublic class Consumer {\n\n    /**\n     * SQS listener method.\n     *\n     * @param message the message payload, necessary for trace propagation\n     */\n    @SqsListener(value = \"${cloud.aws.queue.name}\",\n            deletionPolicy = SqsMessageDeletionPolicy.ON_SUCCESS)\n    public void receive(final Message message) {\n        log.info(message.getPayload().toString());\n    }\n\n}\n</code></pre>","tags":["Java","Spring","Spring Boot","Spring Cloud","AWS","AWS SQS","Trace","Tracing"]},{"location":"category/java/","title":"Java","text":""},{"location":"category/spring-boot/","title":"Spring Boot","text":""},{"location":"category/spring-cloud/","title":"Spring Cloud","text":""},{"location":"category/aws/","title":"AWS","text":""},{"location":"category/apache/","title":"Apache","text":""},{"location":"category/serveless/","title":"Serveless","text":""}]}